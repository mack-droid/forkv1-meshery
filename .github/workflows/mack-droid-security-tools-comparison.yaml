name: Meshery Security Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to scan'
        required: false
        default: 'main'

permissions:
  contents: read
  security-events: write
  issues: write

jobs:
  sbom-generation:
    name: SBOM Generation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        format: ['cyclonedx-json', 'spdx-json']
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Generate SBOM
        uses: anchore/sbom-action@v0.15.1
        with:
          output-format: ${{ matrix.format }}
          output-file: sbom-${{ matrix.format }}.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ matrix.format }}
          path: sbom-${{ matrix.format }}.json

  container-scan:
    name: Container Vulnerability Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        scanner: ['trivy', 'grype']
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: ${{ matrix.scanner }} Scan
        uses: anchore/scan-action@v3
        with:
          scanner: ${{ matrix.scanner }}
          target: 'docker:layer5/meshery:stable-latest'
          output-format: 'json'
          output-file: ${{ matrix.scanner }}-container-report.json
          severity-cutoff: 'medium'

      - name: Upload Report
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.scanner }}-container-report
          path: ${{ matrix.scanner }}-container-report.json

  source-scan:
    name: Source Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: SAST Scan (GoSec)
        uses: securego/gosec@master
        with:
          args: './... -fmt=json -out=gosec-report.json'
        continue-on-error: true

      - name: CycloneDX for Go
        run: |
          go install github.com/CycloneDX/cyclonedx-gomod/cmd/cyclonedx-gomod@latest
          cyclonedx-gomod app -output sbom-go.json

      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: source-reports
          path: |
            gosec-report.json
            sbom-go.json

  vex-generation:
    name: VEX Document Creation
    runs-on: ubuntu-latest
    needs: [sbom-generation, container-scan]
    steps:
      - name: Download SBOM
        uses: actions/download-artifact@v4
        with:
          pattern: sbom-cyclonedx-json.json
          path: sboms

      - name: Download Vulnerability Reports
        uses: actions/download-artifact@v4
        with:
          pattern: '*container-report.json'
          path: vuln-reports

      - name: Install vexctl
        uses: openvex/setup-vexctl@v1
        with:
          version: '0.3.0'

      - name: Generate VEX
        run: |
          vexctl merge \
            --sbom sboms/sbom-cyclonedx-json.json \
            --vex vuln-reports/trivy-container-report.json \
            --vex vuln-reports/grype-container-report.json \
            --output meshery.vex.json

      - name: Upload VEX
        uses: actions/upload-artifact@v4
        with:
          name: vex-document
          path: meshery.vex.json

  security-dashboard:
    name: Security Dashboard
    runs-on: ubuntu-latest
    needs: [sbom-generation, container-scan, source-scan, vex-generation]
    steps:
      - name: Download All Reports
        uses: actions/download-artifact@v4
        with:
          path: security-reports

      - name: Create Comparative Summary
        run: |
          echo "# Security Scan Comparison ($(date +%Y-%m-%d))"
          echo "## Container Vulnerability Scanners"
          
          echo "### Trivy Findings"
          echo "| Severity | Count |"
          echo "|----------|-------|"
          jq -r '.Results[].Vulnerabilities? 
            | group_by(.Severity) 
            | map({severity: .[0].Severity, count: length}) 
            | .[] 
            | "| \(.severity) | \(.count) |"' security-reports/trivy-container-report.json

          echo "### Grype Findings"
          echo "| Severity | Count |"
          echo "|----------|-------|"
          jq -r '.matches 
            | group_by(.vulnerability.severity) 
            | map({severity: .[0].vulnerability.severity, count: length}) 
            | .[] 
            | "| \(.severity) | \(.count) |"' security-reports/grype-container-report.json

          echo "## SBOM Formats"
          echo "| Format | Components | Dependencies |"
          echo "|--------|------------|--------------|"
          jq -r '"| CycloneDX | \(.components | length) | \(."component-versions" | length) |"' security-reports/sbom-cyclonedx-json.json
          jq -r '"| SPDX | \(.packages | length) | \(."relationships" | length) |"' security-reports/sbom-spdx-json.json

          echo "## VEX Document"
          echo "| Status | Vulnerabilities |"
          echo "|--------|-----------------|"
          jq -r '.statements 
            | group_by(.status) 
            | map({status: .[0].status, count: length}) 
            | .[] 
            | "| \(.status) | \(.count) |"' security-reports/vex-document/meshery.vex.json
        >> $GITHUB_STEP_SUMMARY

      - name: Upload to Security Dashboard
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: security-reports/gosec-report.json
          category: sast
