name: Security Tools CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  trivy-scan:
    name: Trivy FS & Image Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Trivy FS Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: .

      - name: Check if Dockerfile exists
        id: dockerfile-check
        run: echo "exists=$(if [ -f Dockerfile ]; then echo true; else echo false; fi)" >> $GITHUB_OUTPUT

      - name: Build Docker Image (if Dockerfile exists)
        if: steps.dockerfile-check.outputs.exists == 'true'
        run: docker build -t testimage:latest .

      - name: Trivy Image Scan
        if: steps.dockerfile-check.outputs.exists == 'true'
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: image
          scan-ref: testimage:latest

  grype-scan:
    name: Grype SCA & SBOM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Anchore SBOM Generation
        uses: anchore/sbom-action@v0.16.0
        with:
          path: .
          format: cyclonedx-json
          output-file: sbom.spdx.json

      - name: Anchore Grype Scan
        uses: anchore/scan-action@v3
        with:
          sbom: sbom.spdx.json
          fail-build: false

  snyk-scan:
    name: Snyk SCA
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Authenticate Snyk
        uses: snyk/actions/setup@v1

      - name: Run Snyk Test
        run: snyk test || true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Generate Snyk SBOM
        run: snyk sbom --format=cyclonedx1.4+json > snyk-sbom.json || true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  semgrep-sast:
    name: Semgrep SAST
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: auto

  gitleaks-secrets:
    name: Gitleaks Secrets Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: "detect --report-format sarif --report-path gitleaks.sarif || true"

      - name: Upload Gitleaks Report
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks.sarif

  trufflehog-secrets:
    name: TruffleHog Secrets Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          scanArguments: "--scan-directory . --only-verified"
