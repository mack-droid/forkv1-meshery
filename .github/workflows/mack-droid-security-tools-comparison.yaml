name: Meshery Security Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to scan'
        required: false
        default: 'main'

permissions:
  contents: read
  security-events: write
  issues: write

jobs:
  sbom-generation:
    name: SBOM Generation (CycloneDX)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for full history

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Generate CycloneDX SBOM
        uses: CycloneDX/gh-gomod-generate-sbom@v2
        with:
          version: v1
          args: mod -licenses -json -output bom.json

      - name: Validate SBOM
        run: |
          jq . bom.json  # Simple validation
          echo "Components: $(jq '.components | length' bom.json)"

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: bom.json

  container-scan:
    name: Container Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@0.14.0
        with:
          image-ref: 'layer5/meshery:stable-latest'
          format: 'json'
          output: 'trivy-report.json'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: false

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json

  vulnerability-scan:
    name: Vulnerability Scan (SBOM)
    runs-on: ubuntu-latest
    needs: sbom-generation
    steps:
      - name: Download SBOM
        uses: actions/download-artifact@v4
        with:
          name: sbom
          path: bom.json

      - name: Scan SBOM with Grype
        run: |
          grype sbom:bom.json -o json > grype-report.json
        continue-on-error: true

      - name: Upload Grype Report
        uses: actions/upload-artifact@v4
        with:
          name: grype-report
          path: grype-report.json

  vex-generation:
    name: VEX Generation
    runs-on: ubuntu-latest
    needs: [sbom-generation, container-scan, vulnerability-scan]
    steps:
      - name: Download SBOM
        uses: actions/download-artifact@v4
        with:
          name: sbom
          path: bom.json

      - name: Download Scan Reports
        uses: actions/download-artifact@v4
        with:
          pattern: '*-report.json'
          path: reports

      - name: Install vexctl
        uses: openvex/setup-vexctl@v1
        with:
          version: '0.3.0'

      - name: Generate VEX Document
        run: |
          vexctl generate \
            --sbom bom.json \
            --vex reports/trivy-report.json \
            --vex reports/grype-report.json \
            --output meshery.vex.json

      - name: Upload VEX Document
        uses: actions/upload-artifact@v4
        with:
          name: vex-document
          path: meshery.vex.json

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [sbom-generation, container-scan, vulnerability-scan, vex-generation]
    steps:
      - name: Download Reports
        uses: actions/download-artifact@v4
        with:
          path: security-reports

      - name: Generate Summary
        run: |
          echo "## SBOM Details" >> $GITHUB_STEP_SUMMARY
          echo "- Components: $(jq '.components | length' security-reports/sbom/bom.json)" >> $GITHUB_STEP_SUMMARY
          echo "- Dependencies: $(jq '.dependencies | length' security-reports/sbom/bom.json)" >> $GITHUB_STEP_SUMMARY
          echo "- Licenses: $(jq '.components[].licenses | length' security-reports/sbom/bom.json | awk '{s+=$1} END {print s}')" >> $GITHUB_STEP_SUMMARY
          
          echo "## Vulnerability Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Scanner | CRITICAL | HIGH |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|----------|------|" >> $GITHUB_STEP_SUMMARY
          trivy_crit=$(jq '[.Results[].Vulnerabilities[]? | select(.Severity == "CRITICAL")] | length' security-reports/trivy-report/trivy-report.json)
          trivy_high=$(jq '[.Results[].Vulnerabilities[]? | select(.Severity == "HIGH")] | length' security-reports/trivy-report/trivy-report.json)
          grype_crit=$(jq '[.matches[] | select(.vulnerability.severity == "Critical")] | length' security-reports/grype-report/grype-report.json)
          grype_high=$(jq '[.matches[] | select(.vulnerability.severity == "High")] | length' security-reports/grype-report/grype-report.json)
          echo "| Trivy | $trivy_crit | $trivy_high |" >> $GITHUB_STEP_SUMMARY
          echo "| Grype | $grype_crit | $grype_high |" >> $GITHUB_STEP_SUMMARY
          
          echo "## VEX Document" >> $GITHUB_STEP_SUMMARY
          echo "- Statements: $(jq '.statements | length' security-reports/vex-document/meshery.vex.json)" >> $GITHUB_STEP_SUMMARY
        
      - name: Generate Comparison Report
        run: |
          echo "## Dependency Comparison" >> $GITHUB_STEP_SUMMARY
          echo "| Tool | Direct Dependencies | Transitive Dependencies |" >> $GITHUB_STEP_SUMMARY
          echo "|------|---------------------|------------------------|" >> $GITHUB_STEP_SUMMARY
          
          # CycloneDX counts
          direct=$(jq '[.components[] | select(.type == "library")] | length' security-reports/sbom/bom.json)
          transitive=$(jq '[.components[] | select(.type == "library") | .dependencies[]] | unique | length' security-reports/sbom/bom.json)
          echo "| CycloneDX (Go) | $direct | $transitive |" >> $GITHUB_STEP_SUMMARY
          
          # Show license distribution
          echo "## License Distribution" >> $GITHUB_STEP_SUMMARY
          jq -r '.components[].licenses[].license.id' security-reports/sbom/bom.json | 
            sort | uniq -c | sort -nr | 
            awk '{print "| " $2 " | " $1 " |"}' >> $GITHUB_STEP_SUMMARY
