name: Meshery Security Scans

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run the workflow on'
        required: false
        default: 'main'
      components:
        description: 'Select components to scan (comma-separated or "all")'
        required: false
        default: 'all'

jobs:
  setup-tools:
    name: Setup Security Tools
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref_name }}

      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b . v0.105.0
          sudo mv syft /usr/local/bin/syft

      - name: Install Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b . v0.78.0
          sudo mv grype /usr/local/bin/grype

      - name: Install Trivy
        uses: aquasecurity/trivy-action@master
        with:
          install-only: true

      - name: Install OpenVEX
        run: |
          curl -LO https://github.com/openvex/openvex/releases/latest/download/openvex-linux-amd64
          chmod +x openvex-linux-amd64
          sudo mv openvex-linux-amd64 /usr/local/bin/openvex

  scan-components:
    name: Scan Component - ${{ matrix.component }}
    runs-on: ubuntu-latest
    needs: setup-tools
    strategy:
      matrix:
        component: ["meshery", "mesheryctl", "meshery-ui", "provider"]
        include:
          - component: meshery
            path: ./server
          - component: mesheryctl
            path: ./mesheryctl
          - component: meshery-ui
            path: ./ui
          - component: provider
            path: ./provider-ui

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref_name }}

      - name: Build Docker image
        run: |
          docker build -t ${{ matrix.component }}:latest ${{ matrix.path }}

      - name: Trivy Image Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: image
          image-ref: ${{ matrix.component }}:latest
          format: table
          exit-code: 0
          severity: CRITICAL,HIGH

      - name: Generate SBOM with Syft
        run: |
          syft ${{ matrix.path }} -o cyclonedx-json > ${{ matrix.component }}-sbom.json

      - name: Upload SBOM Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.component }}-sbom
          path: ${{ matrix.component }}-sbom.json

      - name: Grype SBOM Scan (VEX Report)
        run: |
          grype sbom:${{ matrix.component }}-sbom.json -o cyclonedx-json > ${{ matrix.component }}-grype-vex.json

      - name: Upload Grype VEX Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.component }}-grype-vex
          path: ${{ matrix.component }}-grype-vex.json

      - name: OpenVEX from SBOM
        run: |
          openvex generate --sbom ${{ matrix.component }}-sbom.json --output ${{ matrix.component }}-openvex.json

      - name: Upload OpenVEX Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.component }}-openvex
          path: ${{ matrix.component }}-openvex.json
